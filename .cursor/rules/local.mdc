---
description: 本地修改
globs: 本地修改
---
# 万峰白板部署指南

本文档介绍如何自定义部署和修改 Refly 项目。

## 1. 目录结构

```
refly/deploy/
├── docker/             # Docker 配置目录
│   ├── docker-compose.yml
│   ├── docker-compose.middleware.yml
│   └── .env
└── custom-web/         # 自定义前端代码目录
    ├── Dockerfile      # 自定义 Docker 构建文件
    ├── nginx.conf      # Nginx 配置文件
    └── custom.css      # 自定义样式文件
```

## 2. 自定义修改步骤

### 2.1 创建自定义前端目录

```bash
mkdir -p refly/deploy/custom-web
```

### 2.2 创建自定义 Dockerfile

```dockerfile
FROM reflyai/refly-web:latest

# 复制自定义配置文件
COPY nginx.conf /etc/nginx/conf.d/default.conf
COPY custom.css /usr/share/nginx/html/custom.css

# 修改 index.html
RUN sed -i 's|<title>Refly|<title>万峰白板|g' /usr/share/nginx/html/index.html && \
    sed -i 's|content="Refly|content="万峰白板|g' /usr/share/nginx/html/index.html && \
    echo '<link rel="stylesheet" href="/custom.css">' >> /usr/share/nginx/html/index.html

# 设置环境变量
ENV APP_NAME="万峰白板" \
    APP_DESCRIPTION="AI 驱动的智能白板"

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
```

### 2.3 创建 Nginx 配置文件

```nginx
server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # 支持 HTML5 history 路由
    location / {
        try_files $uri $uri/ /index.html;
        
        # 替换品牌名称
        sub_filter 'Refly' '万峰白板';
        sub_filter_once off;
        sub_filter_types *;
    }

    # API 代理
    location /api {
        proxy_pass http://api:5800;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # WebSocket 代理
    location /ws {
        proxy_pass http://api:5801;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
}
```

### 2.4 创建自定义 CSS 文件

```css
.brand-title,
.text-xl.font-bold.text-black,
[class*="brand-name"],
[data-brand-name] {
    content: "万峰白板" !important;
}

.brand-title::before,
.text-xl.font-bold.text-black::before {
    content: "万峰白板";
    display: block;
}

/* 隐藏原始文本 */
.brand-title span,
.text-xl.font-bold.text-black span {
    display: none;
}

/* 强制替换所有可能的品牌名称 */
*[class*="brand"],
*[class*="logo-text"],
*[class*="app-name"] {
    content: "万峰白板" !important;
}
```

### 2.5 修改 docker-compose.yml

修改 web 服务的构建配置：

```yaml
web:
  build:
    context: ../custom-web
    dockerfile: Dockerfile
  container_name: refly_web
  ports:
    - 5700:80
  restart: always
  networks:
    - refly_network
  environment:
    - API_URL=http://api:5800
```

### 2.6 修改环境变量

在 `.env` 文件中添加或修改以下配置：

```env
APP_NAME=万峰白板
APP_DESCRIPTION=AI 驱动的智能白板
```

## 3. 部署步骤

1. 确保已安装 Docker 和 Docker Compose

2. 进入 docker 配置目录：
```bash
cd refly/deploy/docker
```

3. 构建并启动服务：
```bash
docker compose up -d --build
```

4. 访问应用：
打开浏览器访问 http://localhost:5700

## 4. 品牌替换说明

本配置通过以下几个层面实现品牌名称的替换：

1. Docker 构建时替换 index.html 中的品牌名称
2. Nginx 配置动态替换响应内容中的品牌名称
3. CSS 样式覆盖显示的品牌名称
4. 环境变量配置应用名称和描述

## 5. 注意事项

1. 确保所有配置文件使用 UTF-8 编码以正确显示中文
2. 修改后需要重新构建 Docker 镜像才能生效
3. 如果遇到缓存问题，可以清除浏览器缓存或强制刷新页面 